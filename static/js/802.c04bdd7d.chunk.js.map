{"version":3,"file":"static/js/802.c04bdd7d.chunk.js","mappings":"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","sources":["components/BoxPage.jsx","components/Title.jsx","components/TitlePage.jsx","../node_modules/@chakra-ui/layout/src/stack/h-stack.tsx","pages/Contacts.jsx","../node_modules/@chakra-ui/layout/src/text.tsx","../node_modules/@chakra-ui/object-utils/dist/chunk-R3DH46PF.mjs","../node_modules/@chakra-ui/layout/src/stack/stack-item.tsx","../node_modules/@chakra-ui/breakpoint-utils/dist/chunk-G72KV6MB.mjs","../node_modules/@chakra-ui/layout/src/stack/stack.tsx","../node_modules/@chakra-ui/layout/src/stack/stack.utils.tsx"],"sourcesContent":["import { useColorMode, Box } from '@chakra-ui/react';\nimport React from 'react';\n\nconst BoxPage = ({ children }) => {\n  const { colorMode } = useColorMode();\n\n  return (\n    <Box\n      maxW=\"container.lg\"\n      mt=\"50px\"\n      px=\"16px\"\n      py=\"32px\"\n      bg={colorMode === 'dark' ? 'bgDark.100' : 'bgLight.100'}\n      border=\"2px solid cyan\"\n      boxShadow=\"brandShadow\"\n      rounded=\"md\"\n    >\n      {children}\n    </Box>\n  );\n};\n\nexport default BoxPage;\n","import React from 'react';\nimport { Heading } from '@chakra-ui/react';\n\nconst Title = ({ children }) => {\n  return (\n    <Heading\n      w=\"100%\"\n      display=\"flex\"\n      justifyContent=\"center\"\n      fontSize=\"xl\"\n      color=\"green\"\n    >{ children }</Heading>\n  );\n};\n\nexport default Title;\n","import React from 'react';\nimport { Heading } from '@chakra-ui/react';\n\nconst TitlePage = ({ children }) => {\n  return (\n    <Heading\n      display=\"flex\"\n      justifyContent=\"center\"\n      fontSize=\"3xl\"\n      color=\"brand\"\n    >\n      {children}\n    </Heading>\n  );\n};\n\nexport default TitlePage;\n","import { forwardRef } from \"@chakra-ui/system\"\n\nimport { Stack, StackProps } from \"./stack\"\n\n/**\n * A view that arranges its children in a horizontal line.\n *\n * @see Docs https://chakra-ui.com/docs/components/stack\n */\nexport const HStack = forwardRef<StackProps, \"div\">((props, ref) => (\n  <Stack align=\"center\" {...props} direction=\"row\" ref={ref} />\n))\n\nHStack.displayName = \"HStack\"\n","import React from 'react';\nimport { Flex, HStack, Link, List, ListIcon, ListItem, Text } from '@chakra-ui/react';\nimport { GiSmartphone } from 'react-icons/gi';\nimport { MdOutlineEmail, MdLocationPin } from 'react-icons/md';\n\nimport BoxPage from 'components/BoxPage';\nimport TitlePage from 'components/TitlePage';\nimport Title from 'components/Title';\n\nconst Contact = () => {\n  return (\n    <Flex justifyContent=\"center\">\n      <BoxPage>\n        <TitlePage>Kontakty</TitlePage>\n        <List spacing={4} py={5}>\n          <ListItem>\n            <Link href=\"tel:+48604175046\" textDecoration=\"none\">\n              <HStack spacing={2}>\n                <ListIcon as={GiSmartphone} />\n                <Title>Telefon</Title>\n                <Text>+48604175046</Text>\n              </HStack>\n            </Link>\n          </ListItem>\n          <ListItem>\n            <Link href=\"mailto:8.lsv.888@gmail.com\">\n              <ListIcon as={MdOutlineEmail} />\n              <Title>Telefon</Title>\n              8.lsv.888@gmail.com\n            </Link>\n          </ListItem>\n          <ListItem>\n            <ListIcon as={MdLocationPin} />\n            <Title>Telefon</Title>\n            Polska, Rabka-Zdr√≥j\n          </ListItem>\n        </List>\n      </BoxPage>\n    </Flex>\n  );\n};\n\nexport default Contact;\n","import {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  SystemProps,\n  ThemingProps,\n  useStyleConfig,\n  HTMLChakraProps,\n} from \"@chakra-ui/system\"\nimport { cx } from \"@chakra-ui/shared-utils\"\nimport { compact } from \"@chakra-ui/object-utils\"\n\nexport interface TextProps extends HTMLChakraProps<\"p\">, ThemingProps<\"Text\"> {\n  /**\n   * The CSS `text-align` property\n   * @type SystemProps[\"textAlign\"]\n   */\n  align?: SystemProps[\"textAlign\"]\n  /**\n   * The CSS `text-decoration` property\n   * @type SystemProps[\"textDecoration\"]\n   */\n  decoration?: SystemProps[\"textDecoration\"]\n  /**\n   * The CSS `text-transform` property\n   * @type SystemProps[\"textTransform\"]\n   */\n  casing?: SystemProps[\"textTransform\"]\n}\n\n/**\n * Used to render texts or paragraphs.\n *\n * @see Docs https://chakra-ui.com/text\n */\nexport const Text = forwardRef<TextProps, \"p\">(function Text(props, ref) {\n  const styles = useStyleConfig(\"Text\", props)\n  const { className, align, decoration, casing, ...rest } =\n    omitThemingProps(props)\n\n  const aliasedProps = compact({\n    textAlign: props.align,\n    textDecoration: props.decoration,\n    textTransform: props.casing,\n  })\n\n  return (\n    <chakra.p\n      ref={ref}\n      className={cx(\"chakra-text\", props.className)}\n      {...aliasedProps}\n      {...rest}\n      __css={styles}\n    />\n  )\n})\n\nText.displayName = \"Text\"\n","// src/compact.ts\nfunction compact(object) {\n  const clone = Object.assign({}, object);\n  for (let key in clone) {\n    if (clone[key] === void 0)\n      delete clone[key];\n  }\n  return clone;\n}\n\nexport {\n  compact\n};\n","import { ChakraComponent, chakra } from \"@chakra-ui/system\"\n\nexport const StackItem: ChakraComponent<\"div\"> = (props) => (\n  <chakra.div\n    className=\"chakra-stack__item\"\n    {...props}\n    __css={{\n      display: \"inline-block\",\n      flex: \"0 0 auto\",\n      minWidth: 0,\n      ...props[\"__css\"],\n    }}\n  />\n)\n\nStackItem.displayName = \"StackItem\"\n","// src/responsive.ts\nimport { isObject } from \"@chakra-ui/shared-utils\";\nvar breakpoints = Object.freeze([\n  \"base\",\n  \"sm\",\n  \"md\",\n  \"lg\",\n  \"xl\",\n  \"2xl\"\n]);\nfunction mapResponsive(prop, mapper) {\n  if (Array.isArray(prop)) {\n    return prop.map((item) => item === null ? null : mapper(item));\n  }\n  if (isObject(prop)) {\n    return Object.keys(prop).reduce((result, key) => {\n      result[key] = mapper(prop[key]);\n      return result;\n    }, {});\n  }\n  if (prop != null) {\n    return mapper(prop);\n  }\n  return null;\n}\nfunction objectToArrayNotation(obj, bps = breakpoints) {\n  const result = bps.map((br) => {\n    var _a;\n    return (_a = obj[br]) != null ? _a : null;\n  });\n  const lastItem = result[result.length - 1];\n  while (lastItem === null)\n    result.pop();\n  return result;\n}\nfunction arrayToObjectNotation(values, bps = breakpoints) {\n  const result = {};\n  values.forEach((value, index) => {\n    const key = bps[index];\n    if (value == null)\n      return;\n    result[key] = value;\n  });\n  return result;\n}\nfunction isResponsiveObjectLike(obj, bps = breakpoints) {\n  const keys = Object.keys(obj);\n  return keys.length > 0 && keys.every((key) => bps.includes(key));\n}\nvar isCustomBreakpoint = (v) => Number.isNaN(Number(v));\n\nexport {\n  breakpoints,\n  mapResponsive,\n  objectToArrayNotation,\n  arrayToObjectNotation,\n  isResponsiveObjectLike,\n  isCustomBreakpoint\n};\n","import { getValidChildren } from \"@chakra-ui/react-children-utils\"\nimport { cx } from \"@chakra-ui/shared-utils\"\nimport {\n  chakra,\n  forwardRef,\n  HTMLChakraProps,\n  SystemProps,\n} from \"@chakra-ui/system\"\nimport { cloneElement, Fragment, useMemo } from \"react\"\n\nimport { StackItem } from \"./stack-item\"\nimport type { StackDirection } from \"./stack.utils\"\nimport { getDividerStyles } from \"./stack.utils\"\n\nexport type { StackDirection }\n\ninterface StackOptions {\n  /**\n   * Shorthand for `alignItems` style prop\n   * @type SystemProps[\"alignItems\"]\n   */\n  align?: SystemProps[\"alignItems\"]\n  /**\n   * Shorthand for `justifyContent` style prop\n   * @type SystemProps[\"justifyContent\"]\n   */\n  justify?: SystemProps[\"justifyContent\"]\n  /**\n   * Shorthand for `flexWrap` style prop\n   * @type SystemProps[\"flexWrap\"]\n   */\n  wrap?: SystemProps[\"flexWrap\"]\n  /**\n   * The space between each stack item\n   * @type SystemProps[\"margin\"]\n   * @default \"0.5rem\"\n   */\n  spacing?: SystemProps[\"margin\"]\n  /**\n   * The direction to stack the items.\n   * @default \"column\"\n   */\n  direction?: StackDirection\n  /**\n   * If `true`, each stack item will show a divider\n   * @type React.ReactElement\n   */\n  divider?: React.ReactElement\n  /**\n   * If `true`, the children will be wrapped in a `Box` with\n   * `display: inline-block`, and the `Box` will take the spacing props\n   *\n   * @default false\n   */\n  shouldWrapChildren?: boolean\n  /**\n   * If `true` the items will be stacked horizontally.\n   *\n   * @default false\n   *\n   * @deprecated - Use `direction=\"row\"` or `HStack` instead\n   */\n  isInline?: boolean\n}\n\nexport interface StackProps extends HTMLChakraProps<\"div\">, StackOptions {}\n\n/**\n * Stacks help you easily create flexible and automatically distributed layouts\n *\n * You can stack elements in the horizontal or vertical direction,\n * and apply a space or/and divider between each element.\n *\n * It uses `display: flex` internally and renders a `div`.\n *\n * @see Docs https://chakra-ui.com/stack\n *\n */\nexport const Stack = forwardRef<StackProps, \"div\">((props, ref) => {\n  const {\n    isInline,\n    direction: directionProp,\n    align,\n    justify,\n    spacing = \"0.5rem\",\n    wrap,\n    children,\n    divider,\n    className,\n    shouldWrapChildren,\n    ...rest\n  } = props\n\n  const direction = isInline ? \"row\" : directionProp ?? \"column\"\n\n  const dividerStyle = useMemo(\n    () => getDividerStyles({ spacing, direction }),\n    [spacing, direction],\n  )\n\n  const hasDivider = !!divider\n  const shouldUseChildren = !shouldWrapChildren && !hasDivider\n\n  const clones = useMemo(() => {\n    const validChildren = getValidChildren(children)\n    return shouldUseChildren\n      ? validChildren\n      : validChildren.map((child, index) => {\n          // Prefer provided child key, fallback to index\n          const key = typeof child.key !== \"undefined\" ? child.key : index\n          const isLast = index + 1 === validChildren.length\n          const wrappedChild = <StackItem key={key}>{child}</StackItem>\n          const _child = shouldWrapChildren ? wrappedChild : child\n\n          if (!hasDivider) return _child\n\n          const clonedDivider = cloneElement(\n            divider as React.ReactElement<any>,\n            {\n              __css: dividerStyle,\n            },\n          )\n\n          const _divider = isLast ? null : clonedDivider\n\n          return (\n            <Fragment key={key}>\n              {_child}\n              {_divider}\n            </Fragment>\n          )\n        })\n  }, [\n    divider,\n    dividerStyle,\n    hasDivider,\n    shouldUseChildren,\n    shouldWrapChildren,\n    children,\n  ])\n\n  const _className = cx(\"chakra-stack\", className)\n\n  return (\n    <chakra.div\n      ref={ref}\n      display=\"flex\"\n      alignItems={align}\n      justifyContent={justify}\n      flexDirection={direction}\n      flexWrap={wrap}\n      gap={hasDivider ? undefined : spacing}\n      className={_className}\n      {...rest}\n    >\n      {clones}\n    </chakra.div>\n  )\n})\n\nStack.displayName = \"Stack\"\n","import { ResponsiveValue, SystemProps } from \"@chakra-ui/system\"\nimport { mapResponsive } from \"@chakra-ui/breakpoint-utils\"\n\nexport type StackDirection = ResponsiveValue<\n  \"row\" | \"column\" | \"row-reverse\" | \"column-reverse\"\n>\n\ninterface Options {\n  spacing: SystemProps[\"margin\"]\n  direction: StackDirection\n}\n\nexport function getDividerStyles(options: Options) {\n  const { spacing, direction } = options\n\n  const dividerStyles = {\n    column: {\n      my: spacing,\n      mx: 0,\n      borderLeftWidth: 0,\n      borderBottomWidth: \"1px\",\n    },\n    \"column-reverse\": {\n      my: spacing,\n      mx: 0,\n      borderLeftWidth: 0,\n      borderBottomWidth: \"1px\",\n    },\n    row: {\n      mx: spacing,\n      my: 0,\n      borderLeftWidth: \"1px\",\n      borderBottomWidth: 0,\n    },\n    \"row-reverse\": {\n      mx: spacing,\n      my: 0,\n      borderLeftWidth: \"1px\",\n      borderBottomWidth: 0,\n    },\n  }\n\n  return {\n    \"&\": mapResponsive(\n      direction,\n      (value: keyof typeof dividerStyles) => dividerStyles[value],\n    ),\n  }\n}\n"],"names":["_ref","children","colorMode","useColorMode","_jsx","Box","maxW","mt","px","py","bg","border","boxShadow","rounded","Heading","w","display","justifyContent","fontSize","color","HStack","forwardRef","props","ref","Stack","align","direction","displayName","Flex","_jsxs","BoxPage","TitlePage","List","spacing","ListItem","Link","href","textDecoration","ListIcon","as","GiSmartphone","Title","Text","MdOutlineEmail","MdLocationPin","styles","useStyleConfig","omitThemingProps","rest","className","decoration","casing","aliasedProps","object","clone","Object","assign","key","compact","textAlign","textTransform","chakra","p","cx","__css","StackItem","div","flex","minWidth","freeze","isInline","directionProp","justify","_props$spacing","wrap","divider","shouldWrapChildren","dividerStyle","useMemo","options","prop","mapper","dividerStyles","column","my","mx","borderLeftWidth","borderBottomWidth","row","value","Array","isArray","map","item","isObject","keys","reduce","result","getDividerStyles","hasDivider","shouldUseChildren","clones","validChildren","getValidChildren","child","index","isLast","length","_child","clonedDivider","cloneElement","_divider","Fragment","_className","alignItems","flexDirection","flexWrap","gap"],"sourceRoot":""}