{"version":3,"file":"static/js/402.26d4e452.chunk.js","mappings":"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","sources":["components/BoxPage.jsx","components/Title.jsx","components/TitlePage.jsx","../node_modules/@chakra-ui/layout/src/stack/h-stack.tsx","../node_modules/@chakra-ui/layout/src/aspect-ratio.tsx","pages/Contacts.jsx","../node_modules/@chakra-ui/breakpoint-utils/dist/chunk-G72KV6MB.mjs","../node_modules/@chakra-ui/layout/src/text.tsx","../node_modules/@chakra-ui/object-utils/dist/chunk-R3DH46PF.mjs","../node_modules/@chakra-ui/layout/src/stack/stack-item.tsx","../node_modules/@chakra-ui/layout/src/stack/stack.tsx","../node_modules/@chakra-ui/layout/src/stack/stack.utils.tsx"],"sourcesContent":["import { useColorMode, Box } from '@chakra-ui/react';\nimport React from 'react';\n\nconst BoxPage = ({ children }) => {\n  const { colorMode } = useColorMode();\n\n  return (\n    <Box\n      w={{ base: \"18rem\", sm: \"md\", md: \"3xl\", lg: \"4xl\", xl: \"5xl\", \"2xl\": \"6xl\" }}\n      mx=\"20px\"\n      mt=\"50px\"\n      px=\"16px\"\n      py=\"32px\"\n      bg={colorMode === 'dark' ? 'bgDark.100' : 'bgLight.100'}\n      border=\"2px solid cyan\"\n      boxShadow=\"brandShadow\"\n      rounded=\"md\"\n    >\n      {children}\n    </Box>\n  );\n};\n\nexport default BoxPage;\n","import React from 'react';\nimport { Heading } from '@chakra-ui/react';\n\nconst Title = ({ children }) => {\n  return (\n    <Heading\n      w=\"100%\"\n      display=\"flex\"\n      justifyContent=\"center\"\n      fontSize={{ base: \"md\", md: \"lg\", lg: \"xl\" }}\n      color=\"green\"\n    >{ children }</Heading>\n  );\n};\n\nexport default Title;\n","import React from 'react';\nimport { Heading } from '@chakra-ui/react';\n\nconst TitlePage = ({ children }) => {\n  return (\n    <Heading\n      display=\"flex\"\n      justifyContent=\"center\"\n      fontSize={{ base: \"lg\", md: \"2xl\", lg: \"3xl\" }}\n      color=\"brand\"\n    >\n      {children}\n    </Heading>\n  );\n};\n\nexport default TitlePage;\n","import { forwardRef } from \"@chakra-ui/system\"\n\nimport { Stack, StackProps } from \"./stack\"\n\n/**\n * A view that arranges its children in a horizontal line.\n *\n * @see Docs https://chakra-ui.com/docs/components/stack\n */\nexport const HStack = forwardRef<StackProps, \"div\">((props, ref) => (\n  <Stack align=\"center\" {...props} direction=\"row\" ref={ref} />\n))\n\nHStack.displayName = \"HStack\"\n","import {\n  chakra,\n  forwardRef,\n  ResponsiveValue,\n  HTMLChakraProps,\n} from \"@chakra-ui/system\"\nimport { mapResponsive } from \"@chakra-ui/breakpoint-utils\"\nimport { cx } from \"@chakra-ui/shared-utils\"\n\nimport { Children } from \"react\"\n\ninterface AspectRatioOptions {\n  /**\n   * The aspect ratio of the Box. Common values are:\n   *\n   * `21/9`, `16/9`, `9/16`, `4/3`, `1.85/1`\n   */\n  ratio?: ResponsiveValue<number>\n}\n\nexport interface AspectRatioProps\n  extends Omit<HTMLChakraProps<\"div\">, \"aspectRatio\">,\n    AspectRatioOptions {}\n\n/**\n * React component used to cropping media (videos, images and maps)\n * to a desired aspect ratio.\n *\n * @see Docs https://chakra-ui.com/aspectratiobox\n */\nexport const AspectRatio = forwardRef<AspectRatioProps, \"div\">(function (\n  props,\n  ref,\n) {\n  const { ratio = 4 / 3, children, className, ...rest } = props\n\n  // enforce single child\n  const child = Children.only(children)\n\n  const _className = cx(\"chakra-aspect-ratio\", className)\n\n  return (\n    <chakra.div\n      ref={ref}\n      position=\"relative\"\n      className={_className}\n      _before={{\n        height: 0,\n        content: `\"\"`,\n        display: \"block\",\n        paddingBottom: mapResponsive(ratio, (r) => `${(1 / r) * 100}%`),\n      }}\n      __css={{\n        \"& > *:not(style)\": {\n          overflow: \"hidden\",\n          position: \"absolute\",\n          top: \"0\",\n          right: \"0\",\n          bottom: \"0\",\n          left: \"0\",\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          width: \"100%\",\n          height: \"100%\",\n        },\n        \"& > img, & > video\": {\n          objectFit: \"cover\",\n        },\n      }}\n      {...rest}\n    >\n      {child}\n    </chakra.div>\n  )\n})\n\nAspectRatio.displayName = \"AspectRatio\"\n","import React from 'react';\nimport {\n  AspectRatio,\n  Flex,\n  Stack,\n  HStack,\n  Link,\n  List,\n  ListIcon,\n  ListItem,\n  Text,\n} from '@chakra-ui/react';\nimport { GiSmartphone } from 'react-icons/gi';\nimport { MdOutlineEmail, MdLocationPin } from 'react-icons/md';\n\nimport BoxPage from 'components/BoxPage';\nimport TitlePage from 'components/TitlePage';\nimport Title from 'components/Title';\n\nconst Contact = () => {\n  return (\n    <Flex justifyContent=\"center\">\n      <BoxPage>\n        <TitlePage>Kontakty</TitlePage>\n        <List spacing={4} py={5}>\n          <ListItem>\n            <Link href=\"tel:+48604175046\" textDecoration=\"none\">\n              <Stack\n                spacing={{ base: 3, sm: 14 }}\n                flexDirection={{ base: 'column', sm: 'row' }}\n                alignItems=\"flex-start\"\n              >\n                <HStack>\n                  <ListIcon as={GiSmartphone} color=\"brand\" />\n                  <Title>Telefon</Title>\n                </HStack>\n                <Text>+48604175046</Text>\n              </Stack>\n            </Link>\n          </ListItem>\n          <ListItem>\n            <Link href=\"mailto:domwczasowyzuraw@op.pl\">\n              <Stack\n                spacing={{ base: 3, sm: 14 }}\n                flexDirection={{ base: 'column', sm: 'row' }}\n                alignItems=\"flex-start\"\n              >\n                <HStack>\n                  <ListIcon as={MdOutlineEmail} color=\"brand\" />\n                  <Title>E-mail</Title>\n                </HStack>\n                <Text>domwczasowyzuraw@op.pl</Text>\n              </Stack>\n            </Link>\n          </ListItem>\n          <ListItem>\n            <Stack\n              spacing={{ base: 3, sm: 14 }}\n              flexDirection={{ base: 'column', sm: 'row' }}\n              alignItems=\"flex-start\"\n            >\n              <HStack>\n                <ListIcon as={MdLocationPin} color=\"brand\" />\n                <Title>Adres</Title>\n              </HStack>\n              <Text>34-700, Rabka - Zdrój, Ul. Krótka 8</Text>\n            </Stack>\n            <Flex justifyContent=\"center\" mt={10}>\n              <AspectRatio\n                w={{\n                  base: '2xs',\n                  sm: 'xl',\n                  md: '2xl',\n                  lg: '4xl',\n                  xl: '5xl',\n                  '2xl': '6xl',\n                }}\n                ratio={16 / 9}\n                border=\"2px solid green\"\n                rounded=\"md\"\n              >\n                <iframe\n                  src=\"https://www.google.com/maps/embed?pb=!1m14!1m8!1m3!1d646.4833747798532!2d19.9687929!3d49.5990035!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x4715e1d495b24c33%3A0xec61f7f27a75e7f5!2zRFcgxbt1cmF3!5e0!3m2!1spl!2spl!4v1699539504591!5m2!1spl!2spl\"\n                  allowFullScreen=\"\"\n                  loading=\"lazy\"\n                  referrerPolicy=\"no-referrer-when-downgrade\"\n                  title=\"34-700, Rabka - Zdrój, Ul. Krótka 8\"\n                />\n              </AspectRatio>\n            </Flex>\n          </ListItem>\n        </List>\n      </BoxPage>\n    </Flex>\n  );\n};\n\nexport default Contact;\n","// src/responsive.ts\nimport { isObject } from \"@chakra-ui/shared-utils\";\nvar breakpoints = Object.freeze([\n  \"base\",\n  \"sm\",\n  \"md\",\n  \"lg\",\n  \"xl\",\n  \"2xl\"\n]);\nfunction mapResponsive(prop, mapper) {\n  if (Array.isArray(prop)) {\n    return prop.map((item) => item === null ? null : mapper(item));\n  }\n  if (isObject(prop)) {\n    return Object.keys(prop).reduce((result, key) => {\n      result[key] = mapper(prop[key]);\n      return result;\n    }, {});\n  }\n  if (prop != null) {\n    return mapper(prop);\n  }\n  return null;\n}\nfunction objectToArrayNotation(obj, bps = breakpoints) {\n  const result = bps.map((br) => {\n    var _a;\n    return (_a = obj[br]) != null ? _a : null;\n  });\n  const lastItem = result[result.length - 1];\n  while (lastItem === null)\n    result.pop();\n  return result;\n}\nfunction arrayToObjectNotation(values, bps = breakpoints) {\n  const result = {};\n  values.forEach((value, index) => {\n    const key = bps[index];\n    if (value == null)\n      return;\n    result[key] = value;\n  });\n  return result;\n}\nfunction isResponsiveObjectLike(obj, bps = breakpoints) {\n  const keys = Object.keys(obj);\n  return keys.length > 0 && keys.every((key) => bps.includes(key));\n}\nvar isCustomBreakpoint = (v) => Number.isNaN(Number(v));\n\nexport {\n  breakpoints,\n  mapResponsive,\n  objectToArrayNotation,\n  arrayToObjectNotation,\n  isResponsiveObjectLike,\n  isCustomBreakpoint\n};\n","import {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  SystemProps,\n  ThemingProps,\n  useStyleConfig,\n  HTMLChakraProps,\n} from \"@chakra-ui/system\"\nimport { cx } from \"@chakra-ui/shared-utils\"\nimport { compact } from \"@chakra-ui/object-utils\"\n\nexport interface TextProps extends HTMLChakraProps<\"p\">, ThemingProps<\"Text\"> {\n  /**\n   * The CSS `text-align` property\n   * @type SystemProps[\"textAlign\"]\n   */\n  align?: SystemProps[\"textAlign\"]\n  /**\n   * The CSS `text-decoration` property\n   * @type SystemProps[\"textDecoration\"]\n   */\n  decoration?: SystemProps[\"textDecoration\"]\n  /**\n   * The CSS `text-transform` property\n   * @type SystemProps[\"textTransform\"]\n   */\n  casing?: SystemProps[\"textTransform\"]\n}\n\n/**\n * Used to render texts or paragraphs.\n *\n * @see Docs https://chakra-ui.com/text\n */\nexport const Text = forwardRef<TextProps, \"p\">(function Text(props, ref) {\n  const styles = useStyleConfig(\"Text\", props)\n  const { className, align, decoration, casing, ...rest } =\n    omitThemingProps(props)\n\n  const aliasedProps = compact({\n    textAlign: props.align,\n    textDecoration: props.decoration,\n    textTransform: props.casing,\n  })\n\n  return (\n    <chakra.p\n      ref={ref}\n      className={cx(\"chakra-text\", props.className)}\n      {...aliasedProps}\n      {...rest}\n      __css={styles}\n    />\n  )\n})\n\nText.displayName = \"Text\"\n","// src/compact.ts\nfunction compact(object) {\n  const clone = Object.assign({}, object);\n  for (let key in clone) {\n    if (clone[key] === void 0)\n      delete clone[key];\n  }\n  return clone;\n}\n\nexport {\n  compact\n};\n","import { ChakraComponent, chakra } from \"@chakra-ui/system\"\n\nexport const StackItem: ChakraComponent<\"div\"> = (props) => (\n  <chakra.div\n    className=\"chakra-stack__item\"\n    {...props}\n    __css={{\n      display: \"inline-block\",\n      flex: \"0 0 auto\",\n      minWidth: 0,\n      ...props[\"__css\"],\n    }}\n  />\n)\n\nStackItem.displayName = \"StackItem\"\n","import { getValidChildren } from \"@chakra-ui/react-children-utils\"\nimport { cx } from \"@chakra-ui/shared-utils\"\nimport {\n  chakra,\n  forwardRef,\n  HTMLChakraProps,\n  SystemProps,\n} from \"@chakra-ui/system\"\nimport { cloneElement, Fragment, useMemo } from \"react\"\n\nimport { StackItem } from \"./stack-item\"\nimport type { StackDirection } from \"./stack.utils\"\nimport { getDividerStyles } from \"./stack.utils\"\n\nexport type { StackDirection }\n\ninterface StackOptions {\n  /**\n   * Shorthand for `alignItems` style prop\n   * @type SystemProps[\"alignItems\"]\n   */\n  align?: SystemProps[\"alignItems\"]\n  /**\n   * Shorthand for `justifyContent` style prop\n   * @type SystemProps[\"justifyContent\"]\n   */\n  justify?: SystemProps[\"justifyContent\"]\n  /**\n   * Shorthand for `flexWrap` style prop\n   * @type SystemProps[\"flexWrap\"]\n   */\n  wrap?: SystemProps[\"flexWrap\"]\n  /**\n   * The space between each stack item\n   * @type SystemProps[\"margin\"]\n   * @default \"0.5rem\"\n   */\n  spacing?: SystemProps[\"margin\"]\n  /**\n   * The direction to stack the items.\n   * @default \"column\"\n   */\n  direction?: StackDirection\n  /**\n   * If `true`, each stack item will show a divider\n   * @type React.ReactElement\n   */\n  divider?: React.ReactElement\n  /**\n   * If `true`, the children will be wrapped in a `Box` with\n   * `display: inline-block`, and the `Box` will take the spacing props\n   *\n   * @default false\n   */\n  shouldWrapChildren?: boolean\n  /**\n   * If `true` the items will be stacked horizontally.\n   *\n   * @default false\n   *\n   * @deprecated - Use `direction=\"row\"` or `HStack` instead\n   */\n  isInline?: boolean\n}\n\nexport interface StackProps extends HTMLChakraProps<\"div\">, StackOptions {}\n\n/**\n * Stacks help you easily create flexible and automatically distributed layouts\n *\n * You can stack elements in the horizontal or vertical direction,\n * and apply a space or/and divider between each element.\n *\n * It uses `display: flex` internally and renders a `div`.\n *\n * @see Docs https://chakra-ui.com/stack\n *\n */\nexport const Stack = forwardRef<StackProps, \"div\">((props, ref) => {\n  const {\n    isInline,\n    direction: directionProp,\n    align,\n    justify,\n    spacing = \"0.5rem\",\n    wrap,\n    children,\n    divider,\n    className,\n    shouldWrapChildren,\n    ...rest\n  } = props\n\n  const direction = isInline ? \"row\" : directionProp ?? \"column\"\n\n  const dividerStyle = useMemo(\n    () => getDividerStyles({ spacing, direction }),\n    [spacing, direction],\n  )\n\n  const hasDivider = !!divider\n  const shouldUseChildren = !shouldWrapChildren && !hasDivider\n\n  const clones = useMemo(() => {\n    const validChildren = getValidChildren(children)\n    return shouldUseChildren\n      ? validChildren\n      : validChildren.map((child, index) => {\n          // Prefer provided child key, fallback to index\n          const key = typeof child.key !== \"undefined\" ? child.key : index\n          const isLast = index + 1 === validChildren.length\n          const wrappedChild = <StackItem key={key}>{child}</StackItem>\n          const _child = shouldWrapChildren ? wrappedChild : child\n\n          if (!hasDivider) return _child\n\n          const clonedDivider = cloneElement(\n            divider as React.ReactElement<any>,\n            {\n              __css: dividerStyle,\n            },\n          )\n\n          const _divider = isLast ? null : clonedDivider\n\n          return (\n            <Fragment key={key}>\n              {_child}\n              {_divider}\n            </Fragment>\n          )\n        })\n  }, [\n    divider,\n    dividerStyle,\n    hasDivider,\n    shouldUseChildren,\n    shouldWrapChildren,\n    children,\n  ])\n\n  const _className = cx(\"chakra-stack\", className)\n\n  return (\n    <chakra.div\n      ref={ref}\n      display=\"flex\"\n      alignItems={align}\n      justifyContent={justify}\n      flexDirection={direction}\n      flexWrap={wrap}\n      gap={hasDivider ? undefined : spacing}\n      className={_className}\n      {...rest}\n    >\n      {clones}\n    </chakra.div>\n  )\n})\n\nStack.displayName = \"Stack\"\n","import { ResponsiveValue, SystemProps } from \"@chakra-ui/system\"\nimport { mapResponsive } from \"@chakra-ui/breakpoint-utils\"\n\nexport type StackDirection = ResponsiveValue<\n  \"row\" | \"column\" | \"row-reverse\" | \"column-reverse\"\n>\n\ninterface Options {\n  spacing: SystemProps[\"margin\"]\n  direction: StackDirection\n}\n\nexport function getDividerStyles(options: Options) {\n  const { spacing, direction } = options\n\n  const dividerStyles = {\n    column: {\n      my: spacing,\n      mx: 0,\n      borderLeftWidth: 0,\n      borderBottomWidth: \"1px\",\n    },\n    \"column-reverse\": {\n      my: spacing,\n      mx: 0,\n      borderLeftWidth: 0,\n      borderBottomWidth: \"1px\",\n    },\n    row: {\n      mx: spacing,\n      my: 0,\n      borderLeftWidth: \"1px\",\n      borderBottomWidth: 0,\n    },\n    \"row-reverse\": {\n      mx: spacing,\n      my: 0,\n      borderLeftWidth: \"1px\",\n      borderBottomWidth: 0,\n    },\n  }\n\n  return {\n    \"&\": mapResponsive(\n      direction,\n      (value: keyof typeof dividerStyles) => dividerStyles[value],\n    ),\n  }\n}\n"],"names":["_ref","children","colorMode","useColorMode","_jsx","Box","w","base","sm","md","lg","xl","mx","mt","px","py","bg","border","boxShadow","rounded","Heading","display","justifyContent","fontSize","color","HStack","forwardRef","props","ref","Stack","align","direction","displayName","AspectRatio","ratio","className","rest","child","Children","_className","cx","chakra","div","position","_before","height","content","paddingBottom","mapResponsive","r","__css","overflow","top","right","bottom","left","alignItems","width","objectFit","Flex","_jsxs","BoxPage","TitlePage","List","spacing","ListItem","Link","href","textDecoration","flexDirection","ListIcon","as","GiSmartphone","Title","Text","MdOutlineEmail","MdLocationPin","src","allowFullScreen","loading","referrerPolicy","title","Object","freeze","prop","mapper","Array","isArray","map","item","isObject","keys","reduce","result","key","styles","useStyleConfig","omitThemingProps","decoration","casing","aliasedProps","object","clone","assign","compact","textAlign","textTransform","p","StackItem","flex","minWidth","isInline","directionProp","justify","_props$spacing","wrap","divider","shouldWrapChildren","dividerStyle","useMemo","options","dividerStyles","column","my","borderLeftWidth","borderBottomWidth","row","value","getDividerStyles","hasDivider","shouldUseChildren","clones","validChildren","getValidChildren","index","isLast","length","_child","clonedDivider","cloneElement","_divider","Fragment","flexWrap","gap"],"sourceRoot":""}