{"version":3,"file":"static/js/648.8f8ab786.chunk.js","mappings":"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","sources":["components/BoxPage.jsx","components/TitlePage.jsx","../node_modules/@chakra-ui/image/src/native-image.tsx","../node_modules/@chakra-ui/image/src/use-image.ts","../node_modules/@chakra-ui/image/src/image.tsx","../node_modules/utilities/object-utils/src/omit.ts","pages/About.jsx","../node_modules/@chakra-ui/breakpoint-utils/dist/chunk-G72KV6MB.mjs","../node_modules/@chakra-ui/layout/src/text.tsx","../node_modules/@chakra-ui/object-utils/dist/chunk-R3DH46PF.mjs","../node_modules/@chakra-ui/layout/src/stack/v-stack.tsx","../node_modules/@chakra-ui/layout/src/stack/stack-item.tsx","../node_modules/@chakra-ui/layout/src/stack/stack.tsx","../node_modules/@chakra-ui/layout/src/stack/stack.utils.tsx"],"sourcesContent":["import { useColorMode, Box } from '@chakra-ui/react';\nimport React from 'react';\n\nconst BoxPage = ({ children }) => {\n  const { colorMode } = useColorMode();\n\n  return (\n    <Box\n      w={{ base: \"18rem\", sm: \"md\", md: \"3xl\", lg: \"4xl\", xl: \"5xl\", \"2xl\": \"6xl\" }}\n      mx=\"20px\"\n      mt=\"50px\"\n      px=\"16px\"\n      py=\"32px\"\n      bg={colorMode === 'dark' ? 'bgDark.100' : 'bgLight.100'}\n      border=\"2px solid cyan\"\n      boxShadow=\"brandShadow\"\n      rounded=\"md\"\n    >\n      {children}\n    </Box>\n  );\n};\n\nexport default BoxPage;\n","import React from 'react';\nimport { Heading } from '@chakra-ui/react';\n\nconst TitlePage = ({ children }) => {\n  return (\n    <Heading\n      display=\"flex\"\n      justifyContent=\"center\"\n      fontSize={{ base: \"lg\", md: \"2xl\", lg: \"3xl\" }}\n      color=\"brand\"\n    >\n      {children}\n    </Heading>\n  );\n};\n\nexport default TitlePage;\n","import { PropsOf, forwardRef } from \"@chakra-ui/system\"\n\nexport interface NativeImageOptions {\n  /**\n   * The native HTML `width` attribute to the passed to the `img`\n   */\n  htmlWidth?: string | number\n  /**\n   * The native HTML `height` attribute to the passed to the `img`\n   */\n  htmlHeight?: string | number\n}\n\ninterface NativeImageProps extends PropsOf<\"img\">, NativeImageOptions {}\n\nexport const NativeImage = forwardRef(function NativeImage(\n  props: NativeImageProps,\n  ref: React.Ref<any>,\n) {\n  const { htmlWidth, htmlHeight, alt, ...rest } = props\n  return (\n    <img width={htmlWidth} height={htmlHeight} ref={ref} alt={alt} {...rest} />\n  )\n})\n\nNativeImage.displayName = \"NativeImage\"\n","import { useSafeLayoutEffect } from \"@chakra-ui/react-use-safe-layout-effect\"\nimport { useCallback, useEffect, useRef, useState } from \"react\"\n\ntype NativeImageProps = React.ImgHTMLAttributes<HTMLImageElement>\n\nexport interface UseImageProps {\n  /**\n   * The image `src` attribute\n   */\n  src?: string\n  /**\n   * The image `srcset` attribute\n   */\n  srcSet?: string\n  /**\n   * The image `sizes` attribute\n   */\n  sizes?: string\n  /**\n   * A callback for when the image `src` has been loaded\n   */\n  onLoad?: NativeImageProps[\"onLoad\"]\n  /**\n   * A callback for when there was an error loading the image `src`\n   */\n  onError?: NativeImageProps[\"onError\"]\n  /**\n   * If `true`, opt out of the `fallbackSrc` logic and use as `img`\n   *\n   * @default false\n   */\n  ignoreFallback?: boolean\n  /**\n   * The key used to set the crossOrigin on the HTMLImageElement into which the image will be loaded.\n   * This tells the browser to request cross-origin access when trying to download the image data.\n   */\n  crossOrigin?: NativeImageProps[\"crossOrigin\"]\n  loading?: NativeImageProps[\"loading\"]\n}\n\ntype Status = \"loading\" | \"failed\" | \"pending\" | \"loaded\"\n\nexport type FallbackStrategy = \"onError\" | \"beforeLoadOrError\"\n\ntype ImageEvent = React.SyntheticEvent<HTMLImageElement, Event>\n\n/**\n * React hook that loads an image in the browser,\n * and lets us know the `status` so we can show image\n * fallback if it is still `pending`\n *\n * @returns the status of the image loading progress\n *\n * @example\n *\n * ```jsx\n * function App(){\n *   const status = useImage({ src: \"image.png\" })\n *   return status === \"loaded\" ? <img src=\"image.png\" /> : <Placeholder />\n * }\n * ```\n */\nexport function useImage(props: UseImageProps) {\n  const {\n    loading,\n    src,\n    srcSet,\n    onLoad,\n    onError,\n    crossOrigin,\n    sizes,\n    ignoreFallback,\n  } = props\n\n  const [status, setStatus] = useState<Status>(\"pending\")\n\n  useEffect(() => {\n    setStatus(src ? \"loading\" : \"pending\")\n  }, [src])\n\n  const imageRef = useRef<HTMLImageElement | null>()\n\n  const load = useCallback(() => {\n    if (!src) return\n\n    flush()\n\n    const img = new Image()\n    img.src = src\n    if (crossOrigin) img.crossOrigin = crossOrigin\n    if (srcSet) img.srcset = srcSet\n    if (sizes) img.sizes = sizes\n    if (loading) img.loading = loading\n\n    img.onload = (event) => {\n      flush()\n      setStatus(\"loaded\")\n      onLoad?.(event as unknown as ImageEvent)\n    }\n    img.onerror = (error) => {\n      flush()\n      setStatus(\"failed\")\n      onError?.(error as any)\n    }\n\n    imageRef.current = img\n  }, [src, crossOrigin, srcSet, sizes, onLoad, onError, loading])\n\n  const flush = () => {\n    if (imageRef.current) {\n      imageRef.current.onload = null\n      imageRef.current.onerror = null\n      imageRef.current = null\n    }\n  }\n\n  useSafeLayoutEffect(() => {\n    /**\n     * If user opts out of the fallback/placeholder\n     * logic, let's bail out.\n     */\n    if (ignoreFallback) return undefined\n\n    if (status === \"loading\") {\n      load()\n    }\n    return () => {\n      flush()\n    }\n  }, [status, load, ignoreFallback])\n\n  /**\n   * If user opts out of the fallback/placeholder\n   * logic, let's just return 'loaded'\n   */\n  return ignoreFallback ? \"loaded\" : status\n}\n\nexport const shouldShowFallbackImage = (\n  status: Status,\n  fallbackStrategy: FallbackStrategy,\n) =>\n  (status !== \"loaded\" && fallbackStrategy === \"beforeLoadOrError\") ||\n  (status === \"failed\" && fallbackStrategy === \"onError\")\n\nexport type UseImageReturn = ReturnType<typeof useImage>\n","import {\n  chakra,\n  SystemProps,\n  forwardRef,\n  HTMLChakraProps,\n} from \"@chakra-ui/system\"\nimport { omit } from \"@chakra-ui/object-utils\"\nimport {\n  FallbackStrategy,\n  shouldShowFallbackImage,\n  useImage,\n  UseImageProps,\n} from \"./use-image\"\nimport { NativeImage, NativeImageOptions } from \"./native-image\"\n\ninterface ImageOptions extends NativeImageOptions {\n  /**\n   * Fallback image `src` to show if image is loading or image fails.\n   *\n   * Note 🚨: We recommend you use a local image\n   */\n  fallbackSrc?: string\n  /**\n   * Fallback element to show if image is loading or image fails.\n   * @type React.ReactElement\n   */\n  fallback?: React.ReactElement\n  /**\n   * Defines loading strategy\n   */\n  loading?: \"eager\" | \"lazy\"\n  /**\n   * How the image to fit within its bounds.\n   * It maps to css `object-fit` property.\n   * @type SystemProps[\"objectFit\"]\n   */\n  fit?: SystemProps[\"objectFit\"]\n  /**\n   * How to align the image within its bounds.\n   * It maps to css `object-position` property.\n   * @type SystemProps[\"objectPosition\"]\n   */\n  align?: SystemProps[\"objectPosition\"]\n  /**\n   * If `true`, opt out of the `fallbackSrc` logic and use as `img`\n   *\n   * @default false\n   */\n  ignoreFallback?: boolean\n\n  /**\n   * - beforeLoadOrError(default): loads the fallbackImage while loading the src\n   * - onError: loads the fallbackImage only if there is an error fetching the src\n   *\n   * @default \"beforeLoadOrError\"\n   * @see Issue https://github.com/chakra-ui/chakra-ui/issues/5581\n   */\n  fallbackStrategy?: FallbackStrategy\n  /**\n   * Defining which referrer is sent when fetching the resource.\n   * @type React.HTMLAttributeReferrerPolicy\n   */\n  referrerPolicy?: React.HTMLAttributeReferrerPolicy\n}\n\nexport interface ImageProps\n  extends UseImageProps,\n    Omit<HTMLChakraProps<\"img\">, keyof UseImageProps>,\n    ImageOptions {}\n\n/**\n * React component that renders an image with support\n * for fallbacks\n *\n * @see Docs https://chakra-ui.com/image\n */\nexport const Image = forwardRef<ImageProps, \"img\">(function Image(props, ref) {\n  const {\n    fallbackSrc,\n    fallback,\n    src,\n    srcSet,\n    align,\n    fit,\n    loading,\n    ignoreFallback,\n    crossOrigin,\n    fallbackStrategy = \"beforeLoadOrError\",\n    referrerPolicy,\n    ...rest\n  } = props\n\n  const providedFallback = fallbackSrc !== undefined || fallback !== undefined\n  /**\n   * Defer to native `img` tag if `loading` prop is passed\n   * @see https://github.com/chakra-ui/chakra-ui/issues/1027\n   *\n   * shouldIgnoreFallbackImage determines if we have the possibility to render a fallback image\n   */\n  const shouldIgnoreFallbackImage =\n    loading != null ||\n    // use can opt out of fallback image\n    ignoreFallback ||\n    // if the user doesn't provide any kind of fallback we should ignore it\n    !providedFallback\n\n  /**\n   * returns `loaded` if fallback is ignored\n   */\n  const status = useImage({\n    ...props,\n    crossOrigin,\n    ignoreFallback: shouldIgnoreFallbackImage,\n  })\n\n  const showFallbackImage = shouldShowFallbackImage(status, fallbackStrategy)\n\n  const shared = {\n    ref,\n    objectFit: fit,\n    objectPosition: align,\n    ...(shouldIgnoreFallbackImage ? rest : omit(rest, [\"onError\", \"onLoad\"])),\n  }\n\n  if (showFallbackImage) {\n    /**\n     * If user passed a custom fallback component,\n     * let's render it here.\n     */\n    if (fallback) return fallback\n\n    return (\n      <chakra.img\n        as={NativeImage}\n        className=\"chakra-image__placeholder\"\n        src={fallbackSrc}\n        {...shared}\n      />\n    )\n  }\n\n  return (\n    <chakra.img\n      as={NativeImage}\n      src={src}\n      srcSet={srcSet}\n      crossOrigin={crossOrigin}\n      loading={loading}\n      referrerPolicy={referrerPolicy}\n      className=\"chakra-image\"\n      {...shared}\n    />\n  )\n})\n\nImage.displayName = \"Image\"\n","export function omit<T extends Record<string, any>, K extends keyof T>(\n  object: T,\n  keysToOmit: K[] = [],\n) {\n  const clone: Record<string, unknown> = Object.assign({}, object)\n  for (const key of keysToOmit) {\n    if (key in clone) {\n      delete clone[key as string]\n    }\n  }\n  return clone as Omit<T, K>\n}\n","import React from 'react';\nimport { Flex, Image, Text, VStack } from '@chakra-ui/react';\nimport BoxPage from 'components/BoxPage';\nimport TitlePage from 'components/TitlePage';\n\nimport doc1 from 'images/docs/doc1.webp';\nimport doc2 from 'images/docs/doc2.webp';\nimport doc3 from 'images/docs/doc3.webp';\n\nconst About = () => {\n  return (\n    <Flex justifyContent=\"center\">\n      <BoxPage>\n        <TitlePage>O nas</TitlePage>\n        <VStack spacing={4} py={5}>\n          <Text textIndent=\"10px\">\n            Przedmiotem naszej działalności jest organizowanie „turnusów\n            rehabilitacyjnych”, „wycieczek”, „zielonych i białych szkół”, „\n            kolonii letnich”, „zimowisk” oraz wczasów rodzinnych.\n          </Text>\n          <Text textIndent=\"10px\">\n            Obiekt jest ogrodzony, posiada parking samochodowy, siłownię, stół\n            do ping-ponga, własny plac zabaw dla dzieci, miejsce na ognisko,\n            możliwość gry w koszykówkę, siatkówkę itp.\n          </Text>\n          <Text textIndent=\"10px\">\n            W parku zdrojowym można skorzystać z kortów tenisowych, ścieżki\n            zdrowia i placu zabaw. Regionalna architektura miejska stwarza\n            niepowtarzalny klimat tak charakterystyczny dla Rabki. Miasto Rabka\n            otwarte jest dla turystów a w sposób szczególny tradycyjnie dla\n            dzieci i młodzieży. Pragnie uatrakcyjniać zdrowy wypoczynek\n            niezależnie od pory roku i pozostawić miłe wspomnienia.\n          </Text>\n        </VStack>\n        <Text textIndent=\"10px\" fontWeight=\"700\">\n          Ośrodek posiada wpis do rejestru „Organizatorów turnusów\n          rehabilitacyjnych”\n        </Text>\n        <Flex\n          flexDirection={{ base: 'column', lg: 'row' }}\n          justifyContent=\"center\"\n          alignItems=\"center\"\n          gap={4}\n          mt={5}\n        >\n          <Image\n            src={doc1}\n            alt=\"Organizers of rehabilitation stays\"\n            w={{ base: 'sm', lg: '2xs', xl: 'lg' }}\n          />\n          <Image\n            src={doc2}\n            alt=\"Organizers of rehabilitation stays\"\n            w={{ base: 'sm', lg: '2xs', xl: 'lg' }}\n          />\n          <Image\n            src={doc3}\n            alt=\"Organizers of rehabilitation stays\"\n            w={{ base: 'sm', lg: '2xs', xl: 'lg' }}\n          />\n        </Flex>\n      </BoxPage>\n    </Flex>\n  );\n};\n\nexport default About;\n","// src/responsive.ts\nimport { isObject } from \"@chakra-ui/shared-utils\";\nvar breakpoints = Object.freeze([\n  \"base\",\n  \"sm\",\n  \"md\",\n  \"lg\",\n  \"xl\",\n  \"2xl\"\n]);\nfunction mapResponsive(prop, mapper) {\n  if (Array.isArray(prop)) {\n    return prop.map((item) => item === null ? null : mapper(item));\n  }\n  if (isObject(prop)) {\n    return Object.keys(prop).reduce((result, key) => {\n      result[key] = mapper(prop[key]);\n      return result;\n    }, {});\n  }\n  if (prop != null) {\n    return mapper(prop);\n  }\n  return null;\n}\nfunction objectToArrayNotation(obj, bps = breakpoints) {\n  const result = bps.map((br) => {\n    var _a;\n    return (_a = obj[br]) != null ? _a : null;\n  });\n  const lastItem = result[result.length - 1];\n  while (lastItem === null)\n    result.pop();\n  return result;\n}\nfunction arrayToObjectNotation(values, bps = breakpoints) {\n  const result = {};\n  values.forEach((value, index) => {\n    const key = bps[index];\n    if (value == null)\n      return;\n    result[key] = value;\n  });\n  return result;\n}\nfunction isResponsiveObjectLike(obj, bps = breakpoints) {\n  const keys = Object.keys(obj);\n  return keys.length > 0 && keys.every((key) => bps.includes(key));\n}\nvar isCustomBreakpoint = (v) => Number.isNaN(Number(v));\n\nexport {\n  breakpoints,\n  mapResponsive,\n  objectToArrayNotation,\n  arrayToObjectNotation,\n  isResponsiveObjectLike,\n  isCustomBreakpoint\n};\n","import {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  SystemProps,\n  ThemingProps,\n  useStyleConfig,\n  HTMLChakraProps,\n} from \"@chakra-ui/system\"\nimport { cx } from \"@chakra-ui/shared-utils\"\nimport { compact } from \"@chakra-ui/object-utils\"\n\nexport interface TextProps extends HTMLChakraProps<\"p\">, ThemingProps<\"Text\"> {\n  /**\n   * The CSS `text-align` property\n   * @type SystemProps[\"textAlign\"]\n   */\n  align?: SystemProps[\"textAlign\"]\n  /**\n   * The CSS `text-decoration` property\n   * @type SystemProps[\"textDecoration\"]\n   */\n  decoration?: SystemProps[\"textDecoration\"]\n  /**\n   * The CSS `text-transform` property\n   * @type SystemProps[\"textTransform\"]\n   */\n  casing?: SystemProps[\"textTransform\"]\n}\n\n/**\n * Used to render texts or paragraphs.\n *\n * @see Docs https://chakra-ui.com/text\n */\nexport const Text = forwardRef<TextProps, \"p\">(function Text(props, ref) {\n  const styles = useStyleConfig(\"Text\", props)\n  const { className, align, decoration, casing, ...rest } =\n    omitThemingProps(props)\n\n  const aliasedProps = compact({\n    textAlign: props.align,\n    textDecoration: props.decoration,\n    textTransform: props.casing,\n  })\n\n  return (\n    <chakra.p\n      ref={ref}\n      className={cx(\"chakra-text\", props.className)}\n      {...aliasedProps}\n      {...rest}\n      __css={styles}\n    />\n  )\n})\n\nText.displayName = \"Text\"\n","// src/compact.ts\nfunction compact(object) {\n  const clone = Object.assign({}, object);\n  for (let key in clone) {\n    if (clone[key] === void 0)\n      delete clone[key];\n  }\n  return clone;\n}\n\nexport {\n  compact\n};\n","import { forwardRef } from \"@chakra-ui/system\"\n\nimport { Stack, StackProps } from \"./stack\"\n\n/**\n * A view that arranges its children in a vertical line.\n *\n * @see Docs https://chakra-ui.com/docs/components/stack\n */\nexport const VStack = forwardRef<StackProps, \"div\">((props, ref) => (\n  <Stack align=\"center\" {...props} direction=\"column\" ref={ref} />\n))\n\nVStack.displayName = \"VStack\"\n","import { ChakraComponent, chakra } from \"@chakra-ui/system\"\n\nexport const StackItem: ChakraComponent<\"div\"> = (props) => (\n  <chakra.div\n    className=\"chakra-stack__item\"\n    {...props}\n    __css={{\n      display: \"inline-block\",\n      flex: \"0 0 auto\",\n      minWidth: 0,\n      ...props[\"__css\"],\n    }}\n  />\n)\n\nStackItem.displayName = \"StackItem\"\n","import { getValidChildren } from \"@chakra-ui/react-children-utils\"\nimport { cx } from \"@chakra-ui/shared-utils\"\nimport {\n  chakra,\n  forwardRef,\n  HTMLChakraProps,\n  SystemProps,\n} from \"@chakra-ui/system\"\nimport { cloneElement, Fragment, useMemo } from \"react\"\n\nimport { StackItem } from \"./stack-item\"\nimport type { StackDirection } from \"./stack.utils\"\nimport { getDividerStyles } from \"./stack.utils\"\n\nexport type { StackDirection }\n\ninterface StackOptions {\n  /**\n   * Shorthand for `alignItems` style prop\n   * @type SystemProps[\"alignItems\"]\n   */\n  align?: SystemProps[\"alignItems\"]\n  /**\n   * Shorthand for `justifyContent` style prop\n   * @type SystemProps[\"justifyContent\"]\n   */\n  justify?: SystemProps[\"justifyContent\"]\n  /**\n   * Shorthand for `flexWrap` style prop\n   * @type SystemProps[\"flexWrap\"]\n   */\n  wrap?: SystemProps[\"flexWrap\"]\n  /**\n   * The space between each stack item\n   * @type SystemProps[\"margin\"]\n   * @default \"0.5rem\"\n   */\n  spacing?: SystemProps[\"margin\"]\n  /**\n   * The direction to stack the items.\n   * @default \"column\"\n   */\n  direction?: StackDirection\n  /**\n   * If `true`, each stack item will show a divider\n   * @type React.ReactElement\n   */\n  divider?: React.ReactElement\n  /**\n   * If `true`, the children will be wrapped in a `Box` with\n   * `display: inline-block`, and the `Box` will take the spacing props\n   *\n   * @default false\n   */\n  shouldWrapChildren?: boolean\n  /**\n   * If `true` the items will be stacked horizontally.\n   *\n   * @default false\n   *\n   * @deprecated - Use `direction=\"row\"` or `HStack` instead\n   */\n  isInline?: boolean\n}\n\nexport interface StackProps extends HTMLChakraProps<\"div\">, StackOptions {}\n\n/**\n * Stacks help you easily create flexible and automatically distributed layouts\n *\n * You can stack elements in the horizontal or vertical direction,\n * and apply a space or/and divider between each element.\n *\n * It uses `display: flex` internally and renders a `div`.\n *\n * @see Docs https://chakra-ui.com/stack\n *\n */\nexport const Stack = forwardRef<StackProps, \"div\">((props, ref) => {\n  const {\n    isInline,\n    direction: directionProp,\n    align,\n    justify,\n    spacing = \"0.5rem\",\n    wrap,\n    children,\n    divider,\n    className,\n    shouldWrapChildren,\n    ...rest\n  } = props\n\n  const direction = isInline ? \"row\" : directionProp ?? \"column\"\n\n  const dividerStyle = useMemo(\n    () => getDividerStyles({ spacing, direction }),\n    [spacing, direction],\n  )\n\n  const hasDivider = !!divider\n  const shouldUseChildren = !shouldWrapChildren && !hasDivider\n\n  const clones = useMemo(() => {\n    const validChildren = getValidChildren(children)\n    return shouldUseChildren\n      ? validChildren\n      : validChildren.map((child, index) => {\n          // Prefer provided child key, fallback to index\n          const key = typeof child.key !== \"undefined\" ? child.key : index\n          const isLast = index + 1 === validChildren.length\n          const wrappedChild = <StackItem key={key}>{child}</StackItem>\n          const _child = shouldWrapChildren ? wrappedChild : child\n\n          if (!hasDivider) return _child\n\n          const clonedDivider = cloneElement(\n            divider as React.ReactElement<any>,\n            {\n              __css: dividerStyle,\n            },\n          )\n\n          const _divider = isLast ? null : clonedDivider\n\n          return (\n            <Fragment key={key}>\n              {_child}\n              {_divider}\n            </Fragment>\n          )\n        })\n  }, [\n    divider,\n    dividerStyle,\n    hasDivider,\n    shouldUseChildren,\n    shouldWrapChildren,\n    children,\n  ])\n\n  const _className = cx(\"chakra-stack\", className)\n\n  return (\n    <chakra.div\n      ref={ref}\n      display=\"flex\"\n      alignItems={align}\n      justifyContent={justify}\n      flexDirection={direction}\n      flexWrap={wrap}\n      gap={hasDivider ? undefined : spacing}\n      className={_className}\n      {...rest}\n    >\n      {clones}\n    </chakra.div>\n  )\n})\n\nStack.displayName = \"Stack\"\n","import { ResponsiveValue, SystemProps } from \"@chakra-ui/system\"\nimport { mapResponsive } from \"@chakra-ui/breakpoint-utils\"\n\nexport type StackDirection = ResponsiveValue<\n  \"row\" | \"column\" | \"row-reverse\" | \"column-reverse\"\n>\n\ninterface Options {\n  spacing: SystemProps[\"margin\"]\n  direction: StackDirection\n}\n\nexport function getDividerStyles(options: Options) {\n  const { spacing, direction } = options\n\n  const dividerStyles = {\n    column: {\n      my: spacing,\n      mx: 0,\n      borderLeftWidth: 0,\n      borderBottomWidth: \"1px\",\n    },\n    \"column-reverse\": {\n      my: spacing,\n      mx: 0,\n      borderLeftWidth: 0,\n      borderBottomWidth: \"1px\",\n    },\n    row: {\n      mx: spacing,\n      my: 0,\n      borderLeftWidth: \"1px\",\n      borderBottomWidth: 0,\n    },\n    \"row-reverse\": {\n      mx: spacing,\n      my: 0,\n      borderLeftWidth: \"1px\",\n      borderBottomWidth: 0,\n    },\n  }\n\n  return {\n    \"&\": mapResponsive(\n      direction,\n      (value: keyof typeof dividerStyles) => dividerStyles[value],\n    ),\n  }\n}\n"],"names":["_ref","children","colorMode","useColorMode","_jsx","Box","w","base","sm","md","lg","xl","mx","mt","px","py","bg","border","boxShadow","rounded","Heading","display","justifyContent","fontSize","color","NativeImage","forwardRef","props","ref","htmlWidth","htmlHeight","alt","rest","width","height","displayName","Image","fallbackSrc","fallback","src","srcSet","align","fit","loading","ignoreFallback","crossOrigin","_props$fallbackStrate","fallbackStrategy","referrerPolicy","shouldIgnoreFallbackImage","status","onLoad","onError","sizes","useState","_useState2","setStatus","useEffect","imageRef","useRef","load","useCallback","flush","img","srcset","onload","event","onerror","error","current","useSafeLayoutEffect","useImage","showFallbackImage","shouldShowFallbackImage","shared","objectFit","objectPosition","object","_step","keysToOmit","clone","Object","assign","key","_iterator","omit","chakra","as","className","Flex","_jsxs","BoxPage","TitlePage","VStack","spacing","Text","textIndent","fontWeight","flexDirection","alignItems","gap","doc1","doc2","doc3","freeze","mapResponsive","prop","mapper","Array","isArray","map","item","isObject","keys","reduce","result","styles","useStyleConfig","omitThemingProps","decoration","casing","aliasedProps","compact","textAlign","textDecoration","textTransform","p","cx","__css","Stack","direction","StackItem","div","flex","minWidth","isInline","directionProp","justify","_props$spacing","wrap","divider","shouldWrapChildren","dividerStyle","useMemo","options","dividerStyles","column","my","borderLeftWidth","borderBottomWidth","row","value","getDividerStyles","hasDivider","shouldUseChildren","clones","validChildren","getValidChildren","child","index","isLast","length","_child","clonedDivider","cloneElement","_divider","Fragment","_className","flexWrap"],"sourceRoot":""}